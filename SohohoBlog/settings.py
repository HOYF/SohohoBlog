# -*- conding:utf-8 -*-
"""
Django settings for SohohoBlog project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'v=74&em7cj@)5(la*tlv%y*bzq$#-c!!e2ogjpkfne@6f=c!o('


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# 为了安全起见，在生产环境下需要关闭 DEBUG 选项以及设置允许访问的域名，修改上门两项的值为：
# DEBUG = False
# ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '.sohoho.xim']
#ALLOWED_HOSTS是允许访问的域名列表，'127.0.0.1', 'localhost' 是本地访问的域名，'.sohoho.xim' 是访问服务器的域名，
# 域名前加个点表示允许访问该域名下的子域名，比如 www.sohoho.xim、test.sohoho.xin等二级域名同样允许访问，如果不加前面的点则只允许访问sohoho.xim



# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hoBlog',
    'comments',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'SohohoBlog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SohohoBlog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans' #把英文改为中文

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai' #把国际时区改为中国时区

USE_I18N = True

USE_L10N = True

USE_TZ = True
# USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
# 在Django 项目中会有一些 css、JavaScript 等静态文件，为了能够方便让 Nginx 处理这些静态文件等请求，
# 我们吧项目中全部静态文件收集到一个统一到目录下，这个目录通常位于 Django 项目的根目录，并且命名为 static，为了完成这个任务，
# 我们需要在项目的配置文件里做一些必要的配置
STATIC_ROOT = os.path.join(BASE_DIR,'static')
# STATIC_ROOT 指明了静态文件的收集目录，即项目根目录(BASE_DIR)下的 static 文件夹

